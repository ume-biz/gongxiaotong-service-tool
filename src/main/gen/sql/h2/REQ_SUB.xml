<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.gxt.entity">
  <!-- 需求品类明细信息 [REQ_SUB] -->
  
  <!-- Insert one -->
  <insert id="REQ_SUB_INSERT" parameterType="cn.com.gxt.entity.ReqSubDto">
    INSERT INTO REQ_SUB (
      REQ_CODE,
      REQ_SUB_SEQ,
      PRODUCT_CODE,
      PRODUCT_DESC,
      PRODUCT_SPECS,
      QUANTITY,
      ESTIMATION,
      LOGISTICS_CODE,
      LOGISTICS_DESC,
      REQ_SUB_STATUS,
      CREATE_AUTHOR,
      CREATE_DATETIME,
      UPDATE_AUTHOR,
      UPDATE_DATETIME
    ) VALUES (
      #{reqCode},
      #{reqSubSeq},
      #{productCode},
      #{productDesc},
      #{productSpecs},
      #{quantity},
      #{estimation},
      #{logisticsCode},
      #{logisticsDesc},
      #{reqSubStatus},
      #{createAuthor},
      current_timestamp(),
      #{updateAuthor},
      current_timestamp()
    )
  </insert>

  <!-- Update with optimism check) -->
  <update id="REQ_SUB_UPDATE" parameterType="cn.com.gxt.entity.ReqSubDto">
    UPDATE REQ_SUB
    SET
      PRODUCT_CODE = #{productCode},
      PRODUCT_DESC = #{productDesc},
      PRODUCT_SPECS = #{productSpecs},
      QUANTITY = #{quantity},
      ESTIMATION = #{estimation},
      LOGISTICS_CODE = #{logisticsCode},
      LOGISTICS_DESC = #{logisticsDesc},
      REQ_SUB_STATUS = #{reqSubStatus},
      CREATE_AUTHOR = #{createAuthor},
      CREATE_DATETIME = #{createDatetime},
      UPDATE_AUTHOR = #{updateAuthor},
      UPDATE_DATETIME = current_timestamp() 
    WHERE UPDATE_DATETIME = #{updateDatetime}
      AND REQ_CODE = #{reqCode}
      AND REQ_SUB_SEQ = #{reqSubSeq}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>

  <!-- Smart update -->
  <update id="REQ_SUB_SMART_UPDATE" parameterType="cn.com.gxt.entity.ReqSubDto">
    UPDATE REQ_SUB
    <set>
      <if test="productCode!=null">PRODUCT_CODE = #{productCode},</if>
      <if test="productDesc!=null">PRODUCT_DESC = #{productDesc},</if>
      <if test="productSpecs!=null">PRODUCT_SPECS = #{productSpecs},</if>
      <if test="quantity!=null">QUANTITY = #{quantity},</if>
      <if test="estimation!=null">ESTIMATION = #{estimation},</if>
      <if test="logisticsCode!=null">LOGISTICS_CODE = #{logisticsCode},</if>
      <if test="logisticsDesc!=null">LOGISTICS_DESC = #{logisticsDesc},</if>
      <if test="reqSubStatus!=null">REQ_SUB_STATUS = #{reqSubStatus},</if>
      <if test="createAuthor!=null">CREATE_AUTHOR = #{createAuthor},</if>
      <if test="createDatetime!=null">CREATE_DATETIME = #{createDatetime},</if>
      <if test="updateAuthor!=null">UPDATE_AUTHOR = #{updateAuthor},</if>
      UPDATE_DATETIME = current_timestamp()
    </set>
    WHERE 
       REQ_CODE = #{reqCode}
       AND  REQ_SUB_SEQ = #{reqSubSeq}
      <if test="updateDatetime!=null"> AND UPDATE_DATETIME = #{updateDatetime}</if>
  </update>
  
  <!-- Delete one -->
  <delete id="REQ_SUB_DELETE" parameterType="cn.com.gxt.entity.ReqSubDto">
    DELETE FROM REQ_SUB
    WHERE
      REQ_CODE = #{reqCode} AND 
      REQ_SUB_SEQ = #{reqSubSeq} 
  </delete>

  <!-- Find by primary key -->
  <select id="REQ_SUB_FIND" resultType="cn.com.gxt.entity.ReqSubDto">
    SELECT
      REQ_CODE AS "reqCode",
      REQ_SUB_SEQ AS "reqSubSeq",
      PRODUCT_CODE AS "productCode",
      PRODUCT_DESC AS "productDesc",
      PRODUCT_SPECS AS "productSpecs",
      QUANTITY AS "quantity",
      ESTIMATION AS "estimation",
      LOGISTICS_CODE AS "logisticsCode",
      LOGISTICS_DESC AS "logisticsDesc",
      REQ_SUB_STATUS AS "reqSubStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM REQ_SUB
    WHERE
      REQ_CODE = #{reqCode} AND 
      REQ_SUB_SEQ = #{reqSubSeq} 
  </select>

  <!-- Find by primary key for update with row lock -->
  <select id="REQ_SUB_FIND_FOR_UPDATE" resultType="cn.com.gxt.entity.ReqSubDto">
    SELECT
      REQ_CODE AS "reqCode",
      REQ_SUB_SEQ AS "reqSubSeq",
      PRODUCT_CODE AS "productCode",
      PRODUCT_DESC AS "productDesc",
      PRODUCT_SPECS AS "productSpecs",
      QUANTITY AS "quantity",
      ESTIMATION AS "estimation",
      LOGISTICS_CODE AS "logisticsCode",
      LOGISTICS_DESC AS "logisticsDesc",
      REQ_SUB_STATUS AS "reqSubStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM REQ_SUB
    WHERE
      REQ_CODE = #{reqCode} AND 
      REQ_SUB_SEQ = #{reqSubSeq} 
    FOR UPDATE
  </select>

  <!-- Search -->
  <select id="REQ_SUB_SEARCH" resultType="cn.com.gxt.entity.ReqSubDto">
    SELECT
      REQ_CODE AS "reqCode",
      REQ_SUB_SEQ AS "reqSubSeq",
      PRODUCT_CODE AS "productCode",
      PRODUCT_DESC AS "productDesc",
      PRODUCT_SPECS AS "productSpecs",
      QUANTITY AS "quantity",
      ESTIMATION AS "estimation",
      LOGISTICS_CODE AS "logisticsCode",
      LOGISTICS_DESC AS "logisticsDesc",
      REQ_SUB_STATUS AS "reqSubStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM REQ_SUB
    WHERE 1 = 1 
      <if test="reqCode != null">AND REQ_CODE = #{reqCode}</if>
      <if test="reqSubSeq != null">AND REQ_SUB_SEQ = #{reqSubSeq}</if>
      <if test="productCode != null">AND PRODUCT_CODE = #{productCode}</if>
      <if test="productDesc != null">AND PRODUCT_DESC = #{productDesc}</if>
      <if test="productSpecs != null">AND PRODUCT_SPECS = #{productSpecs}</if>
      <if test="quantity != null">AND QUANTITY = #{quantity}</if>
      <if test="estimation != null">AND ESTIMATION = #{estimation}</if>
      <if test="logisticsCode != null">AND LOGISTICS_CODE = #{logisticsCode}</if>
      <if test="logisticsDesc != null">AND LOGISTICS_DESC = #{logisticsDesc}</if>
      <if test="reqSubStatus != null">AND REQ_SUB_STATUS = #{reqSubStatus}</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR = #{createAuthor}</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR = #{updateAuthor}</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>

  <!-- Like Search -->
  <select id="REQ_SUB_LIKE_SEARCH" resultType="cn.com.gxt.entity.ReqSubDto">
    SELECT
      REQ_CODE AS "reqCode",
      REQ_SUB_SEQ AS "reqSubSeq",
      PRODUCT_CODE AS "productCode",
      PRODUCT_DESC AS "productDesc",
      PRODUCT_SPECS AS "productSpecs",
      QUANTITY AS "quantity",
      ESTIMATION AS "estimation",
      LOGISTICS_CODE AS "logisticsCode",
      LOGISTICS_DESC AS "logisticsDesc",
      REQ_SUB_STATUS AS "reqSubStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM REQ_SUB
    WHERE 1 = 1 
      <if test="reqCode != null">AND REQ_CODE LIKE CONCAT('%', #{reqCode}, '%')</if>
      <if test="reqSubSeq != null">AND REQ_SUB_SEQ LIKE CONCAT('%', #{reqSubSeq}, '%')</if>
      <if test="productCode != null">AND PRODUCT_CODE LIKE CONCAT('%', #{productCode}, '%')</if>
      <if test="productDesc != null">AND PRODUCT_DESC LIKE CONCAT('%', #{productDesc}, '%')</if>
      <if test="productSpecs != null">AND PRODUCT_SPECS LIKE CONCAT('%', #{productSpecs}, '%')</if>
      <if test="quantity != null">AND QUANTITY LIKE CONCAT('%', #{quantity}, '%')</if>
      <if test="estimation != null">AND ESTIMATION LIKE CONCAT('%', #{estimation}, '%')</if>
      <if test="logisticsCode != null">AND LOGISTICS_CODE LIKE CONCAT('%', #{logisticsCode}, '%')</if>
      <if test="logisticsDesc != null">AND LOGISTICS_DESC LIKE CONCAT('%', #{logisticsDesc}, '%')</if>
      <if test="reqSubStatus != null">AND REQ_SUB_STATUS LIKE CONCAT('%', #{reqSubStatus}, '%')</if>
      <if test="createAuthor != null">AND CREATE_AUTHOR LIKE CONCAT('%', #{createAuthor}, '%')</if>
      <if test="updateAuthor != null">AND UPDATE_AUTHOR LIKE CONCAT('%', #{updateAuthor}, '%')</if>
      <if test="createDatetime != null">AND CREATE_DATETIME &gt; #{createDatetime}</if>
      <if test="updateDatetime != null">AND UPDATE_DATETIME &gt; #{updateDatetime}</if>
    <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
    <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
    <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>    
  </select>
  
  <!-- Dynamic Search -->
  <select id="REQ_SUB_DYNA_SEARCH" resultType="cn.com.gxt.entity.ReqSubDto">
    SELECT
      REQ_CODE AS "reqCode",
      REQ_SUB_SEQ AS "reqSubSeq",
      PRODUCT_CODE AS "productCode",
      PRODUCT_DESC AS "productDesc",
      PRODUCT_SPECS AS "productSpecs",
      QUANTITY AS "quantity",
      ESTIMATION AS "estimation",
      LOGISTICS_CODE AS "logisticsCode",
      LOGISTICS_DESC AS "logisticsDesc",
      REQ_SUB_STATUS AS "reqSubStatus",
      CREATE_AUTHOR AS "createAuthor",
      CREATE_DATETIME AS "createDatetime",
      UPDATE_AUTHOR AS "updateAuthor",
      UPDATE_DATETIME AS "updateDatetime"
    FROM REQ_SUB
    WHERE 1 = 1 
      <if test="reqCode != null">AND ( ${reqCode} )</if>
      <if test="reqSubSeq != null">AND ( ${reqSubSeq} )</if>
      <if test="productCode != null">AND ( ${productCode} )</if>
      <if test="productDesc != null">AND ( ${productDesc} )</if>
      <if test="productSpecs != null">AND ( ${productSpecs} )</if>
      <if test="quantity != null">AND ( ${quantity} )</if>
      <if test="estimation != null">AND ( ${estimation} )</if>
      <if test="logisticsCode != null">AND ( ${logisticsCode} )</if>
      <if test="logisticsDesc != null">AND ( ${logisticsDesc} )</if>
      <if test="reqSubStatus != null">AND ( ${reqSubStatus} )</if>
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="theOrderByCondition != null"> ORDER BY ${theOrderByCondition}</if>
      <if test="theGroupByCondition != null"> GROUP BY ${theGroupByCondition}</if>
      <if test="theFetchSize != null">LIMIT ${theFetchStart} , ${theFetchSize}</if>
  </select>
  
  <!-- Count by input condition -->
  <select id="REQ_SUB_COUNT" resultType="java.lang.Integer">
    SELECT count(*)
    FROM REQ_SUB
    WHERE 1 = 1 
      <if test="theSQLCondition != null"> AND ( ${theSQLCondition} )</if>
      <if test="reqCode != null">AND REQ_CODE = #{reqCode}</if>
      <if test="reqSubSeq != null">AND REQ_SUB_SEQ = #{reqSubSeq}</if>
      <if test="productCode != null">AND PRODUCT_CODE = #{productCode}</if>
      <if test="productDesc != null">AND PRODUCT_DESC = #{productDesc}</if>
      <if test="productSpecs != null">AND PRODUCT_SPECS = #{productSpecs}</if>
      <if test="quantity != null">AND QUANTITY = #{quantity}</if>
      <if test="estimation != null">AND ESTIMATION = #{estimation}</if>
      <if test="logisticsCode != null">AND LOGISTICS_CODE = #{logisticsCode}</if>
      <if test="logisticsDesc != null">AND LOGISTICS_DESC = #{logisticsDesc}</if>
      <if test="reqSubStatus != null">AND REQ_SUB_STATUS = #{reqSubStatus}</if>
  </select>

</mapper>

